{"ast":null,"code":"import _objectSpread from \"/Users/resource/Desktop/CA/Clima/clima/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/resource/Desktop/CA/Clima/clima/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/resource/Desktop/CA/Clima/clima/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/resource/Desktop/CA/Clima/clima/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/resource/Desktop/CA/Clima/clima/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/resource/Desktop/CA/Clima/clima/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/resource/Desktop/CA/Clima/clima/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/resource/Desktop/CA/Clima/clima/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./assets/images/logo.svg\";\nimport './App.css';\nimport api from './utils/api';\nimport CardClima from './components/CardClima';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      loading: false,\n      cidades: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"refreshData\",\n    value: function refreshData() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.setState({\n          loading: true\n        }, function () {\n          api.getNairobi().then(function (response) {\n            _this2.setState(function (_ref) {\n              var cidades = _ref.cidades;\n              return {\n                loading: false,\n                cidades: [].concat(_toConsumableArray(cidades.slice(0, 1)), [_objectSpread({}, cidades[1], {\n                  name: response.name\n                })], _toConsumableArray(cidades.slice(2)))\n              };\n            });\n          });\n          api.getUbirici().then(function (response) {\n            _this2.setState(function (_ref2) {\n              var cidades = _ref2.cidades;\n              return {\n                loading: false,\n                cidades: [].concat(_toConsumableArray(cidades.slice(0, 1)), [_objectSpread({}, cidades[1], {\n                  name: response.name\n                })], _toConsumableArray(cidades.slice(2)))\n              };\n            });\n          });\n          api.getNuuk().then(function (response) {\n            _this2.setState(function (_ref3) {\n              var cidades = _ref3.cidades;\n              return {\n                loading: false,\n                cidades: [].concat(_toConsumableArray(cidades.slice(0, 1)), [_objectSpread({}, cidades[1], {\n                  name: response.name\n                })], _toConsumableArray(cidades.slice(2)))\n              };\n            });\n          });\n        });\n      }, 100000);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.setState({\n        loading: true\n      }, function () {\n        api.getNairobi().then(function (response) {\n          _this3.setState({\n            loading: false,\n            cidades: [].concat(_toConsumableArray(_this3.state.cidades), [response])\n          });\n        });\n        api.getUbirici().then(function (response) {\n          _this3.setState({\n            loading: false,\n            cidades: [].concat(_toConsumableArray(_this3.state.cidades), [response])\n          });\n        });\n        api.getNuuk().then(function (response) {\n          _this3.setState({\n            loading: false,\n            cidades: [].concat(_toConsumableArray(_this3.state.cidades), [response])\n          });\n        });\n        console.log('State atual,:', _this3.state.cidades);\n      });\n      localStorage.setItem('cidades_cache', JSON.stringify(this.state.cidades));\n      this.refreshData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          cidades = _this$state.cidades;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, loading ? React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }) : cidades.map(function (cidades, i) {\n        return React.createElement(CardClima, {\n          key: i,\n          local: cidades.name,\n          temperatura: cidades.main.temp,\n          humidity: cidades.main.humidity,\n          pressure: cidades.main.pressure,\n          horaAtualizacao: new Date().toLocaleString(),\n          card_name: cidades.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar Header = function Header() {\n  return React.createElement(\"div\", {\n    className: \"Header\",\n    style: {\n      background: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require('./assets/images/logo.svg'),\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};\n\nvar Loading = function Loading() {\n  return React.createElement(\"img\", {\n    src: require('./assets/images/loader.svg'),\n    alt: \"Carregando dados\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/resource/Desktop/CA/Clima/clima/src/App.js"],"names":["React","Component","api","CardClima","App","props","state","loading","cidades","setInterval","setState","getNairobi","then","response","slice","name","getUbirici","getNuuk","console","log","localStorage","setItem","JSON","stringify","refreshData","map","i","main","temp","humidity","pressure","Date","toLocaleString","Header","background","require","Loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './assets/images/logo.svg';\nimport './App.css';\n\nimport api from './utils/api';\nimport CardClima from './components/CardClima';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      loading: false,\n      cidades: []\n    }\n  }\n  refreshData() {\n    setInterval(() => {\n      this.setState({ loading: true }, () => {\n        api.getNairobi().then(response => {\n          this.setState(({cidades}) => ({\n            loading: false,\n            cidades: [\n              ...cidades.slice(0,1),\n              {\n                ...cidades[1],\n                name: response.name,\n              },\n              ...cidades.slice(2)\n            ]\n          })\n          );\n        })\n        api.getUbirici().then(response => {\n          this.setState(({cidades}) => ({\n            loading: false,\n            cidades: [\n              ...cidades.slice(0,1),\n              {\n                ...cidades[1],\n                name: response.name,\n              },\n              ...cidades.slice(2)\n            ]\n          })\n          );\n        })\n        api.getNuuk().then(response => {\n          this.setState(({cidades}) => ({\n            loading: false,\n            cidades: [\n              ...cidades.slice(0,1),\n              {\n                ...cidades[1],\n                name: response.name,\n              },\n              ...cidades.slice(2)\n            ]\n          })\n          );\n        })\n      });\n    }, 100000)\n  }\n  componentDidMount() {\n    this.setState({ loading: true }, () => {\n      api.getNairobi().then(response => {\n        this.setState({ \n          loading: false,\n          cidades: [...this.state.cidades, response]}\n          )\n      })\n      api.getUbirici().then(response => {\n        this.setState({ \n          loading: false,\n          cidades: [...this.state.cidades, response]}\n          )\n      })\n      api.getNuuk().then(response => {\n        this.setState({ \n          loading: false,\n          cidades: [...this.state.cidades, response]}\n          )\n      })\n      \n      console.log('State atual,:', this.state.cidades)\n    });\n    localStorage.setItem('cidades_cache', JSON.stringify(this.state.cidades));\n    this.refreshData()\n  }\n \n  render() {\n    const { loading, cidades } = this.state\n    return (\n      <div className=\"app\">\n        <Header />\n        <div className=\"container\">\n          {\n            loading ? <Loading/> : \n            cidades.map((cidades, i) => \n            <CardClima\n                key={i}\n                local={cidades.name}\n                temperatura={cidades.main.temp}\n                humidity={cidades.main.humidity}\n                pressure={cidades.main.pressure}\n                horaAtualizacao={new Date().toLocaleString()}\n                card_name={cidades.name}\n              /> \n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\nconst Header = () => (\n  <div className='Header' style={{background: '#fff'}}>\n    <img src={require('./assets/images/logo.svg')} alt=\"logo\" />\n  </div>\n) \n\n  \n\n\nconst Loading = () => <img  src={require('./assets/images/loader.svg')} alt=\"Carregando dados\" />;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}